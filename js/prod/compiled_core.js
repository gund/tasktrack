function TaskTrackCore(a){var b=this,c=$.Deferred();this.dbInit=new DB_Adapter({name:"TaskTrack DB"});this.dbInit.done(function(a){b.dbAdapter=a;b.initialize(c)}).fail(function(){throw Error("Cannot connect to inDB!");}).progress(function(){Utils.log("Waiting for inDB...")});return c.promise()}var TT_PROJECTS=[1,"projectList"],TT_TASKS=[2,"taskList"],TASK_PAUSED=0,TASK_ACTIVE=1,E_INV_SYNC_METHOD=100,E_MISS_DATA=101,E_MISS_LOGIN_PASS=102,E_INV_LOGIN_PASS=103,E_FAIL_SAVE_DATA=104;
TaskTrackCore.prototype.version="1.0.0";TaskTrackCore.prototype.dbAdapter={};TaskTrackCore.prototype.db={};TaskTrackCore.prototype.projectList=[];TaskTrackCore.prototype.taskList=[];TaskTrackCore.prototype.synced=!1;TaskTrackCore.prototype.up2date=!0;TaskTrackCore.prototype.isConnected=!1;TaskTrackCore.prototype.sharedDfd=null;TaskTrackCore.prototype.sharedDfd2=null;TaskTrackCore.prototype.dfdFlag=0;
TaskTrackCore.prototype.initialize=function(a){var b=this;this.db=this.dbAdapter.db;this.initSettings();$.when(this.clearTableListCache(TT_PROJECTS,!0),this.clearTableListCache(TT_TASKS,!0)).done(function(){a.resolveWith(b)}).fail(function(){a.reject()})};
TaskTrackCore.prototype.initSettings=function(){Utils.log("Init App Settings");var a=this.db,b=this;$.ajaxSetup({url:"/server/sync.php",type:"POST",dataType:"JSON",cache:!1,async:!0,success:function(a,d,e){b.handleSuccess(a,d,e)},error:function(a,d,e){b.handleError(a,d,e)}});a.objectStore("settings").count().done(function(c){0===c?(a.objectStore("settings").add({login:null,password:null,up2date:!0},1),sWindow.wnd.show()):a.objectStore("settings").get(1).done(function(a){null===a.login||null===a.password?
sWindow.wnd.show():($("#settings-login").val(a.login),$("#settings-pass").val("").prop("placeholder","Type to change password or leave empty..."),b.checkLogin());b.up2date=a.up2date})})};TaskTrackCore.prototype.checkLogin=function(){this.syncServer2Client()};
TaskTrackCore.prototype.clearTableListCache=function(a,b){var c=this;void 0===b&&!0!==b&&(this.up2date=!1,this.changeSyncState());var d=this.getTableList(a[1]);d.done(function(b){switch(a){case TT_PROJECTS:c.projectList=b;break;case TT_TASKS:c.taskList=b}}).fail(function(){d.reject();throw Error("Failed to get data from inDB!");});return d};
TaskTrackCore.prototype.getTableList=function(a){var b=$.Deferred(),c=this,d={count:0,list:[]};this.db.objectStore(a).index("status").count().done(function(e){if(0<e){d.count=e;var f=0;c.db.objectStore(a).index("status").each(function(a){d.list.push(a.value);f++},DB_ALL).done(function(){d.count=f;b.resolve(d)}).fail(function(a){b.reject(a)})}else b.resolve(d)});return b.promise()};
TaskTrackCore.prototype.getCurrDate=function(){var a=new Date,b=a.getFullYear(),c=10>a.getMonth()+1?"0"+(a.getMonth()+1):a.getMonth()+1,a=10>a.getDate()?"0"+a.getDate():a.getDate();return[b,c,a].join("-")};TaskTrackCore.prototype.normalizeTime=function(a,b){if("object"!=typeof a)throw Error("Invalid argument!");a.h=parseInt(a.h);a.m=parseInt(a.m);a.s=parseInt(a.s);a.h=10>a.h?"0"+a.h:a.h;a.m=10>a.m?"0"+a.m:a.m;a.s=10>a.s?"0"+a.s:a.s;return!0===b?[a.h,a.m,a.s].join(":"):a};
TaskTrackCore.prototype.changeSyncState=function(a){var b=this;a=!!a;this.db.objectStore("settings").get(1).done(function(c){c.up2date=a;b.db.objectStore("settings").put(c,1)})};TaskTrackCore.prototype.checkNetConn=function(){var a=$.Deferred(),b=!1;try{$.ajax({url:"/server/check_conn.php",type:"GET",async:!0,success:function(){b=!0;a.resolve(b)},error:function(){b=!1;a.resolve(b)}})}catch(c){}return a.promise()};
TaskTrackCore.prototype.getData2Sync=function(){var a=$.Deferred(),b={},c={},d=this.db.objectStore(TT_PROJECTS[1]).each(function(a){b[a.key]=a.value}),e=this.db.objectStore(TT_TASKS[1]).each(function(a){c[a.key]=a.value});$.when(d,e).done(function(){var d={projects:b,tasks:c},d=JSON.stringify(d);a.resolve(d)}).fail(a.reject);return a.promise()};
TaskTrackCore.prototype.syncServer2Client=function(a){var b=this,c=50,d=7;void 0===a&&!0!==a&&(this.sharedDfd=$.Deferred(),c=0,d=17);this.dfdFlag=0;a=this.db.objectStore("settings").get(1);var e=this.checkNetConn();$.when(a,e).done(function(a,e){a=a[0];e?b.up2date?(Utils.log("Starting synchronization S2C..."),$.ajax({data:{method:"s2c",login:a.login,password:a.password},beforeSend:function(){errorWindow.showBefore(99,c,d)}}),b.sharedDfd.done(function(a){var d=a.data.projects,c=a.data.tasks,e=[];b.dbAdapter.flushTaskAndProj().done(function(){for(var a in d)e.push(b.db.objectStore(TT_PROJECTS[1]).put(d[a]));
for(a in c)e.push(b.db.objectStore(TT_TASKS[1]).put(c[a]));$.when(e).done(function(){b.renderTaskAndProj()}).fail(function(){throw Error("Failed to save data to inDB!");});Utils.log("S2C Complete!")}).fail(function(){throw Error("Failed to update inDB!");})})):b.syncClient2Server(!0).done(function(){b.syncServer2Client(!0)}):errorWindow.show("Check your Internet connection!")});return this.sharedDfd.promise()};
TaskTrackCore.prototype.syncClient2Server=function(a){var b=this,c=99,d=17;void 0!==a&&!0===a&&(c=49,d=7);this.sharedDfd2=$.Deferred();this.dfdFlag=1;a=this.db.objectStore("settings").get(1);var e=this.checkNetConn();$.when(a,e).done(function(a,e){a=a[0];e?b.up2date?errorWindow.show("Synchronization Completed!",!1):(Utils.log("Starting synchronization C2S..."),b.getData2Sync().done(function(b){$.ajax({data:{method:"c2s",data:b,login:a.login,password:a.password},beforeSend:function(){errorWindow.showBefore(c,
0,d)}})}),b.sharedDfd2.done(function(){Utils.log("C2S Complete!");b.up2date=!0;b.changeSyncState(!0)})):errorWindow.show("Check your Internet connection!")});return this.sharedDfd2.promise()};TaskTrackCore.prototype.renderTaskAndProj=function(){this.clearTableListCache(TT_PROJECTS,!0);this.clearTableListCache(TT_TASKS,!0).done(TaskList.render)};
TaskTrackCore.prototype.handleSuccess=function(a,b,c){Utils.log("Success!",a,a.msg);200==a.status?0==this.dfdFlag?this.sharedDfd.resolve(a,a.status):this.sharedDfd2.resolve(a,a.status):0==this.dfdFlag?this.sharedDfd.reject(a.status,a.msg):this.sharedDfd2.reject(a.status,a.msg);switch(a.status){case 200:errorWindow.show("Synchronization Completed!",!1);break;case E_INV_SYNC_METHOD:errorWindow.show("Invalid synchronization method!");break;case E_MISS_DATA:errorWindow.show("Missing data for sync!");
break;case E_MISS_LOGIN_PASS:errorWindow.show("Missing Login and/or Password!");setTimeout("sWindow.wnd.show()",2E3);break;case E_INV_LOGIN_PASS:errorWindow.show("Invalid Login and/or Password!");setTimeout("sWindow.wnd.show()",2E3);break;case E_FAIL_SAVE_DATA:errorWindow.show("Failed to synchronization data!")}};
TaskTrackCore.prototype.handleError=function(a,b,c){this.sharedDfd.reject(a.status,b);switch(a.status){case 404:errorWindow.show("404 - Not Found");break;default:errorWindow.show("Unknown Error: "+a.status+", "+b+", "+c)}};function DB_Adapter(a){var b=this,c=$.Deferred();this.dbName=""!==a.name?a.name:"DataBase";this.db=$.indexedDB(this.dbName,{schema:{1:function(a){a=a.createObjectStore("projectList",{autoIncrement:!0,keyPath:"id"});a.createIndex("name");a.createIndex("status")},2:function(a){a=a.createObjectStore("taskList",{autoIncrement:!0,keyPath:"id"});a.createIndex("name");a.createIndex("projectId");a.createIndex("status")},3:function(a){a.createObjectStore("settings")}}});this.db.then(function(d){Utils.log("Connected to Indexed DB "+
a.name+"! Version: "+d.version);c.resolve(b)},function(){Utils.log("Cannot create Indexed DB "+a.name);c.reject();throw Error("Cannot create Indexed DB_Adapter!");},function(){Utils.log("Creating Indexed DB_Adapter...");c.notify()});return c.promise()}DB_Adapter.prototype.flushTaskAndProj=function(){var a=$.Deferred(),b=this.db.objectStore(TT_PROJECTS[1]).clear(),c=this.db.objectStore(TT_TASKS[1]).clear();$.when(b,c).done(a.resolve).fail(a.reject);return a.promise()};
var DB_DELETED=0,DB_NORMAL=1,DB_MODIFIED=2,DB_NEW=3,DB_ALL=[DB_NORMAL,DB_NEW];DB_Adapter.prototype.version="1.0.0";DB_Adapter.prototype.dbName="";DB_Adapter.prototype.dbReady=!1;DB_Adapter.prototype.db=null;
